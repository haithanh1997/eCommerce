<ul class="store-pagination">
    @{
        double _pageCount = ((double)((Model.TotalCount) / Model.PageSize));
        int pageCount = _pageCount - (Math.Round(_pageCount)) != 0 ? (int)(_pageCount + 1) : (int)_pageCount;

        //string classNameForNext = Model.CurrentPage == _pageCount ? "disabled" : string.Empty;
        //string classNameForPrevious = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    }
    @*<li class="@classNameForPrevious">
        @if (classNameForPrevious == string.Empty)
        {
            @Html.ActionLink("« Prev", "Index", new { page = (Model.CurrentPage - 1) })}
        else
        {
            <a href="#">« Prev</a>
        }

    </li>*@

    @for (int pages = 1; pages <= pageCount; pages++)
    {
        //
        //adding active class to current page
        string active = "";
        if (pages == Model.CurrentPage) { active = "active"; }
        <li class="@active">@Html.ActionLink(pages.ToString(), "/ProductsIndex", new { page = pages, name = Model.CategoryName })</li>
    }
    @*<li class="@classNameForNext">
        @if (classNameForNext == string.Empty)
        {
            @Html.ActionLink("Next »", "Index", new { page = (Model.CurrentPage + 1) })}
        else
        {
            <a href="#">Next »</a>
        }
    </li>*@
</ul> 
